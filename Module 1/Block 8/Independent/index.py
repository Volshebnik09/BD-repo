import numpy as np

#  Создать вектор размерностью 16 элементов, состоящими из чисел от 1 до 16.
#  Преобразовать этот вектор в матрицу 4х4 элементов.
#  Найти в полученной матрице элементы главной диагонали и вывести их на экран.
vector_1 = np.arange(1, 17)
matrix_4x4 = vector_1.reshape(4, 4)
diagonal_elements = np.diag(matrix_4x4)

print("Задача 1:")
print("Исходный вектор:", vector_1)
print("Матрица 4x4:\n", matrix_4x4)
print("Элементы главной диагонали:", diagonal_elements)


#  Создать матрицу размером 8х8 элементов, состоящую из единиц. Заполнить эту матрицу значениями равными 5,
#  расположенными в шахматном через срезы.  Вывести полученную матрицу на экран.
matrix_8x8 = np.ones((8, 8), dtype=int)
matrix_8x8[::2, ::2] = 5
matrix_8x8[1::2, 1::2] = 5

print("\nЗадача 2:")
print("Матрица 8x8 с шахматным порядком:\n", matrix_8x8)

# Создать вектор размерностью 36 элементов, состоящими из чисел от 1 до 36.
# Преобразовать этот вектор в матрицу 6х6 элементов.
# Найти суммы элементов каждого столбца и суммы элементов каждой строки полученной матрицы.
vector_2 = np.arange(1, 37)
matrix_6x6 = vector_2.reshape(6, 6)
row_sums = matrix_6x6.sum(axis=1)
column_sums = matrix_6x6.sum(axis=0)

print("\nЗадача 3:")
print("Исходный вектор:", vector_2)
print("Матрица 6x6:\n", matrix_6x6)
print("Суммы элементов каждой строки:", row_sums)
print("Суммы элементов каждого столбца:", column_sums)